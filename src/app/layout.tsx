import type { Metadata } from "next";
import localFont from "next/font/local";
import { ThemeProvider } from "@/components/theme-provider";
import "./globals.css";
import { getTheme } from "@/lib/theme";

const outfit = localFont({
  src: [
    {
      path: './fonts/Outfit-Regular.woff2',
      weight: '400',
      style: 'normal',
    },
    {
      path: './fonts/Outfit-Bold.woff2',
      weight: '700',
      style: 'normal',
    },
  ],
  variable: '--font-outfit',
  display: 'swap'
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const theme = await getTheme()
  
  return (
    <ThemeProvider defaultTheme={theme}>
      <html lang="en" className={theme === 'dark' ? 'dark' : theme === 'system' ? '' : 'light'}>
        <head>
          {/* <Script src="https://unpkg.com/react-scan/dist/auto.global.js"/> */}
          <script
            dangerouslySetInnerHTML={{
              __html: `
                (function() {
                  const theme = document.documentElement.className.includes('dark') ? 'dark' : 
                    document.documentElement.className.includes('light') ? 'light' : 'system';
                  if (theme === 'system' || theme === '') {
                    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';
                    document.documentElement.className = systemTheme;
                  }
                })();
              `,
            }}
          />
        </head>
        <body className={`${outfit.variable} ${outfit.className} antialiased`}>
          {children}
        </body>
      </html>
    </ThemeProvider>
  );
}
